#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Prueba5.models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="pagina")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertAdministrador(Administrador instance);
    partial void UpdateAdministrador(Administrador instance);
    partial void DeleteAdministrador(Administrador instance);
    partial void InsertCliente(Cliente instance);
    partial void UpdateCliente(Cliente instance);
    partial void DeleteCliente(Cliente instance);
    partial void Insertdistancia(distancia instance);
    partial void Updatedistancia(distancia instance);
    partial void Deletedistancia(distancia instance);
    partial void InsertEstacionamiento(Estacionamiento instance);
    partial void UpdateEstacionamiento(Estacionamiento instance);
    partial void DeleteEstacionamiento(Estacionamiento instance);
    partial void InsertLocal(Local instance);
    partial void UpdateLocal(Local instance);
    partial void DeleteLocal(Local instance);
    partial void InsertParkimetro(Parkimetro instance);
    partial void UpdateParkimetro(Parkimetro instance);
    partial void DeleteParkimetro(Parkimetro instance);
    partial void InsertPersona(Persona instance);
    partial void UpdatePersona(Persona instance);
    partial void DeletePersona(Persona instance);
    partial void InserttipoPersona(tipoPersona instance);
    partial void UpdatetipoPersona(tipoPersona instance);
    partial void DeletetipoPersona(tipoPersona instance);
    partial void Insertusuario(usuario instance);
    partial void Updateusuario(usuario instance);
    partial void Deleteusuario(usuario instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["paginaConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Administrador> Administrador
		{
			get
			{
				return this.GetTable<Administrador>();
			}
		}
		
		public System.Data.Linq.Table<Cliente> Cliente
		{
			get
			{
				return this.GetTable<Cliente>();
			}
		}
		
		public System.Data.Linq.Table<distancia> distancia
		{
			get
			{
				return this.GetTable<distancia>();
			}
		}
		
		public System.Data.Linq.Table<Estacionamiento> Estacionamiento
		{
			get
			{
				return this.GetTable<Estacionamiento>();
			}
		}
		
		public System.Data.Linq.Table<Local> Local
		{
			get
			{
				return this.GetTable<Local>();
			}
		}
		
		public System.Data.Linq.Table<Parkimetro> Parkimetro
		{
			get
			{
				return this.GetTable<Parkimetro>();
			}
		}
		
		public System.Data.Linq.Table<Persona> Persona
		{
			get
			{
				return this.GetTable<Persona>();
			}
		}
		
		public System.Data.Linq.Table<tipoPersona> tipoPersona
		{
			get
			{
				return this.GetTable<tipoPersona>();
			}
		}
		
		public System.Data.Linq.Table<ubicaciones> ubicaciones
		{
			get
			{
				return this.GetTable<ubicaciones>();
			}
		}
		
		public System.Data.Linq.Table<usuario> usuario
		{
			get
			{
				return this.GetTable<usuario>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_crearCliente")]
		public int SP_crearCliente([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string nombrePersona, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string apellidoPersona, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string usuario, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string contrasenna, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string salt, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> edad)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nombrePersona, apellidoPersona, usuario, contrasenna, salt, edad);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_crearMensajero")]
		public int SP_crearMensajero([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string nombrePersona, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string apellidoPersona, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string usuario, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string contrasenna, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string salt, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> edad)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nombrePersona, apellidoPersona, usuario, contrasenna, salt, edad);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Administrador")]
	public partial class Administrador : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idAdministrador;
		
		private string _nombreAdm;
		
		private string _rutAdm;
		
		private string _contrasenaAdm;
		
		private int _idTipoPersona;
		
		private string _usuario;
		
		private EntityRef<tipoPersona> _tipoPersona;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidAdministradorChanging(int value);
    partial void OnidAdministradorChanged();
    partial void OnnombreAdmChanging(string value);
    partial void OnnombreAdmChanged();
    partial void OnrutAdmChanging(string value);
    partial void OnrutAdmChanged();
    partial void OncontrasenaAdmChanging(string value);
    partial void OncontrasenaAdmChanged();
    partial void OnidTipoPersonaChanging(int value);
    partial void OnidTipoPersonaChanged();
    partial void OnusuarioChanging(string value);
    partial void OnusuarioChanged();
    #endregion
		
		public Administrador()
		{
			this._tipoPersona = default(EntityRef<tipoPersona>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAdministrador", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idAdministrador
		{
			get
			{
				return this._idAdministrador;
			}
			set
			{
				if ((this._idAdministrador != value))
				{
					this.OnidAdministradorChanging(value);
					this.SendPropertyChanging();
					this._idAdministrador = value;
					this.SendPropertyChanged("idAdministrador");
					this.OnidAdministradorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombreAdm", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nombreAdm
		{
			get
			{
				return this._nombreAdm;
			}
			set
			{
				if ((this._nombreAdm != value))
				{
					this.OnnombreAdmChanging(value);
					this.SendPropertyChanging();
					this._nombreAdm = value;
					this.SendPropertyChanged("nombreAdm");
					this.OnnombreAdmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rutAdm", DbType="Char(12) NOT NULL", CanBeNull=false)]
		public string rutAdm
		{
			get
			{
				return this._rutAdm;
			}
			set
			{
				if ((this._rutAdm != value))
				{
					this.OnrutAdmChanging(value);
					this.SendPropertyChanging();
					this._rutAdm = value;
					this.SendPropertyChanged("rutAdm");
					this.OnrutAdmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contrasenaAdm", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string contrasenaAdm
		{
			get
			{
				return this._contrasenaAdm;
			}
			set
			{
				if ((this._contrasenaAdm != value))
				{
					this.OncontrasenaAdmChanging(value);
					this.SendPropertyChanging();
					this._contrasenaAdm = value;
					this.SendPropertyChanged("contrasenaAdm");
					this.OncontrasenaAdmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTipoPersona", DbType="Int NOT NULL")]
		public int idTipoPersona
		{
			get
			{
				return this._idTipoPersona;
			}
			set
			{
				if ((this._idTipoPersona != value))
				{
					if (this._tipoPersona.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTipoPersonaChanging(value);
					this.SendPropertyChanging();
					this._idTipoPersona = value;
					this.SendPropertyChanged("idTipoPersona");
					this.OnidTipoPersonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usuario", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string usuario
		{
			get
			{
				return this._usuario;
			}
			set
			{
				if ((this._usuario != value))
				{
					this.OnusuarioChanging(value);
					this.SendPropertyChanging();
					this._usuario = value;
					this.SendPropertyChanged("usuario");
					this.OnusuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tipoPersona_Administrador", Storage="_tipoPersona", ThisKey="idTipoPersona", OtherKey="idTipoPersona", IsForeignKey=true)]
		public tipoPersona tipoPersona
		{
			get
			{
				return this._tipoPersona.Entity;
			}
			set
			{
				tipoPersona previousValue = this._tipoPersona.Entity;
				if (((previousValue != value) 
							|| (this._tipoPersona.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tipoPersona.Entity = null;
						previousValue.Administrador.Remove(this);
					}
					this._tipoPersona.Entity = value;
					if ((value != null))
					{
						value.Administrador.Add(this);
						this._idTipoPersona = value.idTipoPersona;
					}
					else
					{
						this._idTipoPersona = default(int);
					}
					this.SendPropertyChanged("tipoPersona");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cliente")]
	public partial class Cliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IdCliente;
		
		private string _RutCliente;
		
		private int _idTipoPersona;
		
		private string _nombreCliente;
		
		private string _apellido;
		
		private string _contrasenaCliente;
		
		private string _email;
		
		private string _usuario;
		
		private int _idlocal;
		
		private EntityRef<Local> _Local;
		
		private EntityRef<tipoPersona> _tipoPersona;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdClienteChanging(string value);
    partial void OnIdClienteChanged();
    partial void OnRutClienteChanging(string value);
    partial void OnRutClienteChanged();
    partial void OnidTipoPersonaChanging(int value);
    partial void OnidTipoPersonaChanged();
    partial void OnnombreClienteChanging(string value);
    partial void OnnombreClienteChanged();
    partial void OnapellidoChanging(string value);
    partial void OnapellidoChanged();
    partial void OncontrasenaClienteChanging(string value);
    partial void OncontrasenaClienteChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnusuarioChanging(string value);
    partial void OnusuarioChanged();
    partial void OnidlocalChanging(int value);
    partial void OnidlocalChanged();
    #endregion
		
		public Cliente()
		{
			this._Local = default(EntityRef<Local>);
			this._tipoPersona = default(EntityRef<tipoPersona>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCliente", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IdCliente
		{
			get
			{
				return this._IdCliente;
			}
			set
			{
				if ((this._IdCliente != value))
				{
					this.OnIdClienteChanging(value);
					this.SendPropertyChanging();
					this._IdCliente = value;
					this.SendPropertyChanged("IdCliente");
					this.OnIdClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RutCliente", DbType="Char(12) NOT NULL", CanBeNull=false)]
		public string RutCliente
		{
			get
			{
				return this._RutCliente;
			}
			set
			{
				if ((this._RutCliente != value))
				{
					this.OnRutClienteChanging(value);
					this.SendPropertyChanging();
					this._RutCliente = value;
					this.SendPropertyChanged("RutCliente");
					this.OnRutClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTipoPersona", DbType="Int NOT NULL")]
		public int idTipoPersona
		{
			get
			{
				return this._idTipoPersona;
			}
			set
			{
				if ((this._idTipoPersona != value))
				{
					if (this._tipoPersona.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTipoPersonaChanging(value);
					this.SendPropertyChanging();
					this._idTipoPersona = value;
					this.SendPropertyChanged("idTipoPersona");
					this.OnidTipoPersonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombreCliente", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nombreCliente
		{
			get
			{
				return this._nombreCliente;
			}
			set
			{
				if ((this._nombreCliente != value))
				{
					this.OnnombreClienteChanging(value);
					this.SendPropertyChanging();
					this._nombreCliente = value;
					this.SendPropertyChanged("nombreCliente");
					this.OnnombreClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apellido", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string apellido
		{
			get
			{
				return this._apellido;
			}
			set
			{
				if ((this._apellido != value))
				{
					this.OnapellidoChanging(value);
					this.SendPropertyChanging();
					this._apellido = value;
					this.SendPropertyChanged("apellido");
					this.OnapellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contrasenaCliente", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string contrasenaCliente
		{
			get
			{
				return this._contrasenaCliente;
			}
			set
			{
				if ((this._contrasenaCliente != value))
				{
					this.OncontrasenaClienteChanging(value);
					this.SendPropertyChanging();
					this._contrasenaCliente = value;
					this.SendPropertyChanged("contrasenaCliente");
					this.OncontrasenaClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usuario", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string usuario
		{
			get
			{
				return this._usuario;
			}
			set
			{
				if ((this._usuario != value))
				{
					this.OnusuarioChanging(value);
					this.SendPropertyChanging();
					this._usuario = value;
					this.SendPropertyChanged("usuario");
					this.OnusuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idlocal", DbType="Int NOT NULL")]
		public int idlocal
		{
			get
			{
				return this._idlocal;
			}
			set
			{
				if ((this._idlocal != value))
				{
					if (this._Local.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidlocalChanging(value);
					this.SendPropertyChanging();
					this._idlocal = value;
					this.SendPropertyChanged("idlocal");
					this.OnidlocalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Local_Cliente", Storage="_Local", ThisKey="idlocal", OtherKey="idLocal", IsForeignKey=true)]
		public Local Local
		{
			get
			{
				return this._Local.Entity;
			}
			set
			{
				Local previousValue = this._Local.Entity;
				if (((previousValue != value) 
							|| (this._Local.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Local.Entity = null;
						previousValue.Cliente.Remove(this);
					}
					this._Local.Entity = value;
					if ((value != null))
					{
						value.Cliente.Add(this);
						this._idlocal = value.idLocal;
					}
					else
					{
						this._idlocal = default(int);
					}
					this.SendPropertyChanged("Local");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tipoPersona_Cliente", Storage="_tipoPersona", ThisKey="idTipoPersona", OtherKey="idTipoPersona", IsForeignKey=true)]
		public tipoPersona tipoPersona
		{
			get
			{
				return this._tipoPersona.Entity;
			}
			set
			{
				tipoPersona previousValue = this._tipoPersona.Entity;
				if (((previousValue != value) 
							|| (this._tipoPersona.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tipoPersona.Entity = null;
						previousValue.Cliente.Remove(this);
					}
					this._tipoPersona.Entity = value;
					if ((value != null))
					{
						value.Cliente.Add(this);
						this._idTipoPersona = value.idTipoPersona;
					}
					else
					{
						this._idTipoPersona = default(int);
					}
					this.SendPropertyChanged("tipoPersona");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.distancia")]
	public partial class distancia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idDistancia;
		
		private System.DateTime _FECHA;
		
		private string _HORA;
		
		private string _DISTANCIA1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidDistanciaChanging(int value);
    partial void OnidDistanciaChanged();
    partial void OnFECHAChanging(System.DateTime value);
    partial void OnFECHAChanged();
    partial void OnHORAChanging(string value);
    partial void OnHORAChanged();
    partial void OnDISTANCIA1Changing(string value);
    partial void OnDISTANCIA1Changed();
    #endregion
		
		public distancia()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDistancia", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idDistancia
		{
			get
			{
				return this._idDistancia;
			}
			set
			{
				if ((this._idDistancia != value))
				{
					this.OnidDistanciaChanging(value);
					this.SendPropertyChanging();
					this._idDistancia = value;
					this.SendPropertyChanged("idDistancia");
					this.OnidDistanciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FECHA", DbType="Date NOT NULL")]
		public System.DateTime FECHA
		{
			get
			{
				return this._FECHA;
			}
			set
			{
				if ((this._FECHA != value))
				{
					this.OnFECHAChanging(value);
					this.SendPropertyChanging();
					this._FECHA = value;
					this.SendPropertyChanged("FECHA");
					this.OnFECHAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HORA", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string HORA
		{
			get
			{
				return this._HORA;
			}
			set
			{
				if ((this._HORA != value))
				{
					this.OnHORAChanging(value);
					this.SendPropertyChanging();
					this._HORA = value;
					this.SendPropertyChanged("HORA");
					this.OnHORAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="DISTANCIA", Storage="_DISTANCIA1", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string DISTANCIA1
		{
			get
			{
				return this._DISTANCIA1;
			}
			set
			{
				if ((this._DISTANCIA1 != value))
				{
					this.OnDISTANCIA1Changing(value);
					this.SendPropertyChanging();
					this._DISTANCIA1 = value;
					this.SendPropertyChanged("DISTANCIA1");
					this.OnDISTANCIA1Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Estacionamiento")]
	public partial class Estacionamiento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idEstacionamiento;
		
		private bool _disponibilidad;
		
		private int _idParkimetro;
		
		private EntitySet<Local> _Local;
		
		private EntityRef<Parkimetro> _Parkimetro;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidEstacionamientoChanging(int value);
    partial void OnidEstacionamientoChanged();
    partial void OndisponibilidadChanging(bool value);
    partial void OndisponibilidadChanged();
    partial void OnidParkimetroChanging(int value);
    partial void OnidParkimetroChanged();
    #endregion
		
		public Estacionamiento()
		{
			this._Local = new EntitySet<Local>(new Action<Local>(this.attach_Local), new Action<Local>(this.detach_Local));
			this._Parkimetro = default(EntityRef<Parkimetro>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEstacionamiento", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idEstacionamiento
		{
			get
			{
				return this._idEstacionamiento;
			}
			set
			{
				if ((this._idEstacionamiento != value))
				{
					this.OnidEstacionamientoChanging(value);
					this.SendPropertyChanging();
					this._idEstacionamiento = value;
					this.SendPropertyChanged("idEstacionamiento");
					this.OnidEstacionamientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_disponibilidad", DbType="Bit NOT NULL")]
		public bool disponibilidad
		{
			get
			{
				return this._disponibilidad;
			}
			set
			{
				if ((this._disponibilidad != value))
				{
					this.OndisponibilidadChanging(value);
					this.SendPropertyChanging();
					this._disponibilidad = value;
					this.SendPropertyChanged("disponibilidad");
					this.OndisponibilidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idParkimetro", DbType="Int NOT NULL")]
		public int idParkimetro
		{
			get
			{
				return this._idParkimetro;
			}
			set
			{
				if ((this._idParkimetro != value))
				{
					if (this._Parkimetro.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidParkimetroChanging(value);
					this.SendPropertyChanging();
					this._idParkimetro = value;
					this.SendPropertyChanged("idParkimetro");
					this.OnidParkimetroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estacionamiento_Local", Storage="_Local", ThisKey="idEstacionamiento", OtherKey="idEstacionamiento")]
		public EntitySet<Local> Local
		{
			get
			{
				return this._Local;
			}
			set
			{
				this._Local.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Parkimetro_Estacionamiento", Storage="_Parkimetro", ThisKey="idParkimetro", OtherKey="idParkimetro", IsForeignKey=true)]
		public Parkimetro Parkimetro
		{
			get
			{
				return this._Parkimetro.Entity;
			}
			set
			{
				Parkimetro previousValue = this._Parkimetro.Entity;
				if (((previousValue != value) 
							|| (this._Parkimetro.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Parkimetro.Entity = null;
						previousValue.Estacionamiento.Remove(this);
					}
					this._Parkimetro.Entity = value;
					if ((value != null))
					{
						value.Estacionamiento.Add(this);
						this._idParkimetro = value.idParkimetro;
					}
					else
					{
						this._idParkimetro = default(int);
					}
					this.SendPropertyChanged("Parkimetro");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Local(Local entity)
		{
			this.SendPropertyChanging();
			entity.Estacionamiento = this;
		}
		
		private void detach_Local(Local entity)
		{
			this.SendPropertyChanging();
			entity.Estacionamiento = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Local")]
	public partial class Local : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idLocal;
		
		private string _nombreLocal;
		
		private string _Direccion;
		
		private bool _estado;
		
		private int _idEstacionamiento;
		
		private EntitySet<Cliente> _Cliente;
		
		private EntityRef<Estacionamiento> _Estacionamiento;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidLocalChanging(int value);
    partial void OnidLocalChanged();
    partial void OnnombreLocalChanging(string value);
    partial void OnnombreLocalChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnestadoChanging(bool value);
    partial void OnestadoChanged();
    partial void OnidEstacionamientoChanging(int value);
    partial void OnidEstacionamientoChanged();
    #endregion
		
		public Local()
		{
			this._Cliente = new EntitySet<Cliente>(new Action<Cliente>(this.attach_Cliente), new Action<Cliente>(this.detach_Cliente));
			this._Estacionamiento = default(EntityRef<Estacionamiento>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idLocal", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idLocal
		{
			get
			{
				return this._idLocal;
			}
			set
			{
				if ((this._idLocal != value))
				{
					this.OnidLocalChanging(value);
					this.SendPropertyChanging();
					this._idLocal = value;
					this.SendPropertyChanged("idLocal");
					this.OnidLocalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombreLocal", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nombreLocal
		{
			get
			{
				return this._nombreLocal;
			}
			set
			{
				if ((this._nombreLocal != value))
				{
					this.OnnombreLocalChanging(value);
					this.SendPropertyChanging();
					this._nombreLocal = value;
					this.SendPropertyChanged("nombreLocal");
					this.OnnombreLocalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estado", DbType="Bit NOT NULL")]
		public bool estado
		{
			get
			{
				return this._estado;
			}
			set
			{
				if ((this._estado != value))
				{
					this.OnestadoChanging(value);
					this.SendPropertyChanging();
					this._estado = value;
					this.SendPropertyChanged("estado");
					this.OnestadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEstacionamiento", DbType="Int NOT NULL")]
		public int idEstacionamiento
		{
			get
			{
				return this._idEstacionamiento;
			}
			set
			{
				if ((this._idEstacionamiento != value))
				{
					if (this._Estacionamiento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEstacionamientoChanging(value);
					this.SendPropertyChanging();
					this._idEstacionamiento = value;
					this.SendPropertyChanged("idEstacionamiento");
					this.OnidEstacionamientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Local_Cliente", Storage="_Cliente", ThisKey="idLocal", OtherKey="idlocal")]
		public EntitySet<Cliente> Cliente
		{
			get
			{
				return this._Cliente;
			}
			set
			{
				this._Cliente.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estacionamiento_Local", Storage="_Estacionamiento", ThisKey="idEstacionamiento", OtherKey="idEstacionamiento", IsForeignKey=true)]
		public Estacionamiento Estacionamiento
		{
			get
			{
				return this._Estacionamiento.Entity;
			}
			set
			{
				Estacionamiento previousValue = this._Estacionamiento.Entity;
				if (((previousValue != value) 
							|| (this._Estacionamiento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estacionamiento.Entity = null;
						previousValue.Local.Remove(this);
					}
					this._Estacionamiento.Entity = value;
					if ((value != null))
					{
						value.Local.Add(this);
						this._idEstacionamiento = value.idEstacionamiento;
					}
					else
					{
						this._idEstacionamiento = default(int);
					}
					this.SendPropertyChanged("Estacionamiento");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cliente(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.Local = this;
		}
		
		private void detach_Cliente(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.Local = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Parkimetro")]
	public partial class Parkimetro : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idParkimetro;
		
		private string _fecha;
		
		private string _hora;
		
		private string _minuto;
		
		private string _segundo;
		
		private string _TiempoUso;
		
		private string _saldo;
		
		private EntitySet<Estacionamiento> _Estacionamiento;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidParkimetroChanging(int value);
    partial void OnidParkimetroChanged();
    partial void OnfechaChanging(string value);
    partial void OnfechaChanged();
    partial void OnhoraChanging(string value);
    partial void OnhoraChanged();
    partial void OnminutoChanging(string value);
    partial void OnminutoChanged();
    partial void OnsegundoChanging(string value);
    partial void OnsegundoChanged();
    partial void OnTiempoUsoChanging(string value);
    partial void OnTiempoUsoChanged();
    partial void OnsaldoChanging(string value);
    partial void OnsaldoChanged();
    #endregion
		
		public Parkimetro()
		{
			this._Estacionamiento = new EntitySet<Estacionamiento>(new Action<Estacionamiento>(this.attach_Estacionamiento), new Action<Estacionamiento>(this.detach_Estacionamiento));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idParkimetro", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idParkimetro
		{
			get
			{
				return this._idParkimetro;
			}
			set
			{
				if ((this._idParkimetro != value))
				{
					this.OnidParkimetroChanging(value);
					this.SendPropertyChanging();
					this._idParkimetro = value;
					this.SendPropertyChanged("idParkimetro");
					this.OnidParkimetroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string fecha
		{
			get
			{
				return this._fecha;
			}
			set
			{
				if ((this._fecha != value))
				{
					this.OnfechaChanging(value);
					this.SendPropertyChanging();
					this._fecha = value;
					this.SendPropertyChanged("fecha");
					this.OnfechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hora", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string hora
		{
			get
			{
				return this._hora;
			}
			set
			{
				if ((this._hora != value))
				{
					this.OnhoraChanging(value);
					this.SendPropertyChanging();
					this._hora = value;
					this.SendPropertyChanged("hora");
					this.OnhoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_minuto", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string minuto
		{
			get
			{
				return this._minuto;
			}
			set
			{
				if ((this._minuto != value))
				{
					this.OnminutoChanging(value);
					this.SendPropertyChanging();
					this._minuto = value;
					this.SendPropertyChanged("minuto");
					this.OnminutoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_segundo", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string segundo
		{
			get
			{
				return this._segundo;
			}
			set
			{
				if ((this._segundo != value))
				{
					this.OnsegundoChanging(value);
					this.SendPropertyChanging();
					this._segundo = value;
					this.SendPropertyChanged("segundo");
					this.OnsegundoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TiempoUso", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string TiempoUso
		{
			get
			{
				return this._TiempoUso;
			}
			set
			{
				if ((this._TiempoUso != value))
				{
					this.OnTiempoUsoChanging(value);
					this.SendPropertyChanging();
					this._TiempoUso = value;
					this.SendPropertyChanged("TiempoUso");
					this.OnTiempoUsoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_saldo", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string saldo
		{
			get
			{
				return this._saldo;
			}
			set
			{
				if ((this._saldo != value))
				{
					this.OnsaldoChanging(value);
					this.SendPropertyChanging();
					this._saldo = value;
					this.SendPropertyChanged("saldo");
					this.OnsaldoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Parkimetro_Estacionamiento", Storage="_Estacionamiento", ThisKey="idParkimetro", OtherKey="idParkimetro")]
		public EntitySet<Estacionamiento> Estacionamiento
		{
			get
			{
				return this._Estacionamiento;
			}
			set
			{
				this._Estacionamiento.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Estacionamiento(Estacionamiento entity)
		{
			this.SendPropertyChanging();
			entity.Parkimetro = this;
		}
		
		private void detach_Estacionamiento(Estacionamiento entity)
		{
			this.SendPropertyChanging();
			entity.Parkimetro = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Persona")]
	public partial class Persona : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idPersona;
		
		private string _nombrePersona;
		
		private string _apellidoPersona;
		
		private string _usuario;
		
		private string _contrasenna;
		
		private string _salt;
		
		private int _edad;
		
		private byte _estado;
		
		private int _idTipoPersona;
		
		private string _email;
		
		private EntityRef<tipoPersona> _tipoPersona;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPersonaChanging(int value);
    partial void OnidPersonaChanged();
    partial void OnnombrePersonaChanging(string value);
    partial void OnnombrePersonaChanged();
    partial void OnapellidoPersonaChanging(string value);
    partial void OnapellidoPersonaChanged();
    partial void OnusuarioChanging(string value);
    partial void OnusuarioChanged();
    partial void OncontrasennaChanging(string value);
    partial void OncontrasennaChanged();
    partial void OnsaltChanging(string value);
    partial void OnsaltChanged();
    partial void OnedadChanging(int value);
    partial void OnedadChanged();
    partial void OnestadoChanging(byte value);
    partial void OnestadoChanged();
    partial void OnidTipoPersonaChanging(int value);
    partial void OnidTipoPersonaChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    #endregion
		
		public Persona()
		{
			this._tipoPersona = default(EntityRef<tipoPersona>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPersona", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idPersona
		{
			get
			{
				return this._idPersona;
			}
			set
			{
				if ((this._idPersona != value))
				{
					this.OnidPersonaChanging(value);
					this.SendPropertyChanging();
					this._idPersona = value;
					this.SendPropertyChanged("idPersona");
					this.OnidPersonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombrePersona", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nombrePersona
		{
			get
			{
				return this._nombrePersona;
			}
			set
			{
				if ((this._nombrePersona != value))
				{
					this.OnnombrePersonaChanging(value);
					this.SendPropertyChanging();
					this._nombrePersona = value;
					this.SendPropertyChanged("nombrePersona");
					this.OnnombrePersonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apellidoPersona", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string apellidoPersona
		{
			get
			{
				return this._apellidoPersona;
			}
			set
			{
				if ((this._apellidoPersona != value))
				{
					this.OnapellidoPersonaChanging(value);
					this.SendPropertyChanging();
					this._apellidoPersona = value;
					this.SendPropertyChanged("apellidoPersona");
					this.OnapellidoPersonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usuario", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string usuario
		{
			get
			{
				return this._usuario;
			}
			set
			{
				if ((this._usuario != value))
				{
					this.OnusuarioChanging(value);
					this.SendPropertyChanging();
					this._usuario = value;
					this.SendPropertyChanged("usuario");
					this.OnusuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contrasenna", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string contrasenna
		{
			get
			{
				return this._contrasenna;
			}
			set
			{
				if ((this._contrasenna != value))
				{
					this.OncontrasennaChanging(value);
					this.SendPropertyChanging();
					this._contrasenna = value;
					this.SendPropertyChanged("contrasenna");
					this.OncontrasennaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salt", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string salt
		{
			get
			{
				return this._salt;
			}
			set
			{
				if ((this._salt != value))
				{
					this.OnsaltChanging(value);
					this.SendPropertyChanging();
					this._salt = value;
					this.SendPropertyChanged("salt");
					this.OnsaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_edad", DbType="Int NOT NULL")]
		public int edad
		{
			get
			{
				return this._edad;
			}
			set
			{
				if ((this._edad != value))
				{
					this.OnedadChanging(value);
					this.SendPropertyChanging();
					this._edad = value;
					this.SendPropertyChanged("edad");
					this.OnedadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estado", DbType="TinyInt NOT NULL")]
		public byte estado
		{
			get
			{
				return this._estado;
			}
			set
			{
				if ((this._estado != value))
				{
					this.OnestadoChanging(value);
					this.SendPropertyChanging();
					this._estado = value;
					this.SendPropertyChanged("estado");
					this.OnestadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTipoPersona", DbType="Int NOT NULL")]
		public int idTipoPersona
		{
			get
			{
				return this._idTipoPersona;
			}
			set
			{
				if ((this._idTipoPersona != value))
				{
					if (this._tipoPersona.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTipoPersonaChanging(value);
					this.SendPropertyChanging();
					this._idTipoPersona = value;
					this.SendPropertyChanged("idTipoPersona");
					this.OnidTipoPersonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tipoPersona_Persona", Storage="_tipoPersona", ThisKey="idTipoPersona", OtherKey="idTipoPersona", IsForeignKey=true)]
		public tipoPersona tipoPersona
		{
			get
			{
				return this._tipoPersona.Entity;
			}
			set
			{
				tipoPersona previousValue = this._tipoPersona.Entity;
				if (((previousValue != value) 
							|| (this._tipoPersona.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tipoPersona.Entity = null;
						previousValue.Persona.Remove(this);
					}
					this._tipoPersona.Entity = value;
					if ((value != null))
					{
						value.Persona.Add(this);
						this._idTipoPersona = value.idTipoPersona;
					}
					else
					{
						this._idTipoPersona = default(int);
					}
					this.SendPropertyChanged("tipoPersona");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tipoPersona")]
	public partial class tipoPersona : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idTipoPersona;
		
		private string _Descripcion;
		
		private bool _estado;
		
		private EntitySet<Administrador> _Administrador;
		
		private EntitySet<Cliente> _Cliente;
		
		private EntitySet<Persona> _Persona;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTipoPersonaChanging(int value);
    partial void OnidTipoPersonaChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnestadoChanging(bool value);
    partial void OnestadoChanged();
    #endregion
		
		public tipoPersona()
		{
			this._Administrador = new EntitySet<Administrador>(new Action<Administrador>(this.attach_Administrador), new Action<Administrador>(this.detach_Administrador));
			this._Cliente = new EntitySet<Cliente>(new Action<Cliente>(this.attach_Cliente), new Action<Cliente>(this.detach_Cliente));
			this._Persona = new EntitySet<Persona>(new Action<Persona>(this.attach_Persona), new Action<Persona>(this.detach_Persona));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTipoPersona", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idTipoPersona
		{
			get
			{
				return this._idTipoPersona;
			}
			set
			{
				if ((this._idTipoPersona != value))
				{
					this.OnidTipoPersonaChanging(value);
					this.SendPropertyChanging();
					this._idTipoPersona = value;
					this.SendPropertyChanged("idTipoPersona");
					this.OnidTipoPersonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estado", DbType="Bit NOT NULL")]
		public bool estado
		{
			get
			{
				return this._estado;
			}
			set
			{
				if ((this._estado != value))
				{
					this.OnestadoChanging(value);
					this.SendPropertyChanging();
					this._estado = value;
					this.SendPropertyChanged("estado");
					this.OnestadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tipoPersona_Administrador", Storage="_Administrador", ThisKey="idTipoPersona", OtherKey="idTipoPersona")]
		public EntitySet<Administrador> Administrador
		{
			get
			{
				return this._Administrador;
			}
			set
			{
				this._Administrador.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tipoPersona_Cliente", Storage="_Cliente", ThisKey="idTipoPersona", OtherKey="idTipoPersona")]
		public EntitySet<Cliente> Cliente
		{
			get
			{
				return this._Cliente;
			}
			set
			{
				this._Cliente.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tipoPersona_Persona", Storage="_Persona", ThisKey="idTipoPersona", OtherKey="idTipoPersona")]
		public EntitySet<Persona> Persona
		{
			get
			{
				return this._Persona;
			}
			set
			{
				this._Persona.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Administrador(Administrador entity)
		{
			this.SendPropertyChanging();
			entity.tipoPersona = this;
		}
		
		private void detach_Administrador(Administrador entity)
		{
			this.SendPropertyChanging();
			entity.tipoPersona = null;
		}
		
		private void attach_Cliente(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.tipoPersona = this;
		}
		
		private void detach_Cliente(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.tipoPersona = null;
		}
		
		private void attach_Persona(Persona entity)
		{
			this.SendPropertyChanging();
			entity.tipoPersona = this;
		}
		
		private void detach_Persona(Persona entity)
		{
			this.SendPropertyChanging();
			entity.tipoPersona = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ubicaciones")]
	public partial class ubicaciones
	{
		
		private int _ID;
		
		private string _ubicaciones1;
		
		private string _latitud;
		
		private string _longitud;
		
		public ubicaciones()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ubicaciones", Storage="_ubicaciones1", DbType="NVarChar(MAX)")]
		public string ubicaciones1
		{
			get
			{
				return this._ubicaciones1;
			}
			set
			{
				if ((this._ubicaciones1 != value))
				{
					this._ubicaciones1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_latitud", DbType="NVarChar(500)")]
		public string latitud
		{
			get
			{
				return this._latitud;
			}
			set
			{
				if ((this._latitud != value))
				{
					this._latitud = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_longitud", DbType="NVarChar(500)")]
		public string longitud
		{
			get
			{
				return this._longitud;
			}
			set
			{
				if ((this._longitud != value))
				{
					this._longitud = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.usuario")]
	public partial class usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idUsuario;
		
		private string _nombreCompleto;
		
		private string _nombreUsuario;
		
		private string _password1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidUsuarioChanging(int value);
    partial void OnidUsuarioChanged();
    partial void OnnombreCompletoChanging(string value);
    partial void OnnombreCompletoChanged();
    partial void OnnombreUsuarioChanging(string value);
    partial void OnnombreUsuarioChanged();
    partial void Onpassword1Changing(string value);
    partial void Onpassword1Changed();
    #endregion
		
		public usuario()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUsuario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idUsuario
		{
			get
			{
				return this._idUsuario;
			}
			set
			{
				if ((this._idUsuario != value))
				{
					this.OnidUsuarioChanging(value);
					this.SendPropertyChanging();
					this._idUsuario = value;
					this.SendPropertyChanged("idUsuario");
					this.OnidUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombreCompleto", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string nombreCompleto
		{
			get
			{
				return this._nombreCompleto;
			}
			set
			{
				if ((this._nombreCompleto != value))
				{
					this.OnnombreCompletoChanging(value);
					this.SendPropertyChanging();
					this._nombreCompleto = value;
					this.SendPropertyChanged("nombreCompleto");
					this.OnnombreCompletoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombreUsuario", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string nombreUsuario
		{
			get
			{
				return this._nombreUsuario;
			}
			set
			{
				if ((this._nombreUsuario != value))
				{
					this.OnnombreUsuarioChanging(value);
					this.SendPropertyChanging();
					this._nombreUsuario = value;
					this.SendPropertyChanged("nombreUsuario");
					this.OnnombreUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password1", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string password1
		{
			get
			{
				return this._password1;
			}
			set
			{
				if ((this._password1 != value))
				{
					this.Onpassword1Changing(value);
					this.SendPropertyChanging();
					this._password1 = value;
					this.SendPropertyChanged("password1");
					this.Onpassword1Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
